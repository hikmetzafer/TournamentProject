{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "This is a home match, select your team GS or FB gs\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GS\n",
      "\n",
      "1. match's score is GS 2 : FB 1\n",
      "\n",
      "2. match's score is FB 4 : GS 1\n",
      "\n",
      "Your team lost\n",
      "\n"
     ]
    }
   ],
   "source": [
    "import random\n",
    "\n",
    "your_team = input('This is a home match, select your team GS or FB').upper()\n",
    "\n",
    "while True:    \n",
    "    print(your_team)\n",
    "    if your_team != 'GS' and your_team != 'FB':\n",
    "        your_team = input('GS or FB please').upper()\n",
    "    else:\n",
    "        home = your_team\n",
    "        if home == 'GS':\n",
    "            away = 'FB'\n",
    "        else:\n",
    "            away ='GS'\n",
    "        break\n",
    "        \n",
    "home_total, away_total = 0,0\n",
    "\n",
    "for matches in range(2):\n",
    "    \n",
    "    list_random = []\n",
    "    goal_try = random.randint(0,10)\n",
    "    home_score,away_score = 0,0\n",
    "    \n",
    "    \n",
    "    while goal_try < random.randint(0,100):\n",
    "        list_random.append(random.randint(0,1000))\n",
    "        goal_try += 3\n",
    "\n",
    "    for goal in list_random:\n",
    "        if goal % 3 == 1:\n",
    "            home_score += 1\n",
    "        elif goal % 3 == 2:\n",
    "            away_score += 1\n",
    "    \n",
    "    if matches < 1:\n",
    "        print(f\"\\n{matches+1}. match's score is {home} {home_score} : {away} {away_score}\")\n",
    "    else :\n",
    "        print(f\"\\n{matches+1}. match's score is {away} {away_score} : {home} {home_score}\")\n",
    "    \n",
    "    home_total += home_score\n",
    "    away_total += away_score\n",
    "\n",
    "if home_total == away_total:\n",
    "    penalties = random.choice([True, False])\n",
    "    if penalties:\n",
    "        result = 'Draw. Your team is CHAMPION with penalty shots'\n",
    "    else:\n",
    "        result = 'Draw. Your team lost with penalty shots'\n",
    "elif home_total > away_total:\n",
    "    result = f'Your team is CHAMPION'\n",
    "else:\n",
    "    result = f'Your team lost'\n",
    "\n",
    "print('\\n'+result, end='\\n\\n')    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
